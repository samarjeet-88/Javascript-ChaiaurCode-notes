//IMMEDIATELY INVOKED FUNCTION EXPRESSION(IIFE)
//FOR EXAMPLE WHEN WE START AN APP THEN THE FUNCTION CONTAINING THE DATABASE FUNCTION SHOULD BE IMMEDIATELY STARTED
//ANOTHER EXAMPLE IS THE POLLUTION OF THE VARIABLES INSIDE A FUNCTION BY THE GLOBAL VARIABLES(WE DONT WANT THIS THAT IS WHY WE USE IIFE)

// function chai(){
//     console.log(`DB CONNECTED`)
// }
// chai()

// (function chai(){
//     console.log(`DB CONNECTED`)
// })()

//()=>INSIDE THE FIRST FUNCTION WE WRITE THE FUNCTION DEFINITION
//()=>INSIDE THE SECOND FUNCTION WE EXECUTE THE FUNCTION
//WE USE IIFE TO REMOVE THE POLLUTION OF THE GLOBAL SCOPE

// (() =>{
//     console.log(`DB CONNECTED TWO`);
// })()
//OUTPUT=>DB CONNECTED TWO

// (function chai(){
//     console.log('DB CONNECTED')
// })()

// (() =>{
//     console.log(`DB CONNECTED TWO`);
// })()
//OUTPUT=>ERROR
//THIS WILL GIVE AN ERROR BECAUSE IIFE FUNCTIONS DOESNT KNOW WHEN THE CONTEXT ENDS THEREFORE WE ADD ; AT THE END OF AN IIFE FUNCTION

// (function chai(){
//  NAMED IIFE
//     console.log('DB CONNECTED')
// })();

// (() =>{
//     console.log(`DB CONNECTED TWO`);
// })()
//OUTPUT=>DB CONNECTED DB CONNECTED TWO


//WE CAN ALSO PASS ARGGUMENTS TO IIFE
(function chai(){
    //named IIFE
    console.log('DB CONNECTED')
})();

((name) =>{
    console.log(`DB CONNECTED TWO ${name}`);
})('samar')
